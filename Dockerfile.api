# Lightweight API service
FROM node:20-alpine AS builder

WORKDIR /app

# Copy workspace configuration
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/api-main/package.json ./apps/api-main/

# Install pnpm and dependencies
RUN corepack enable && corepack prepare pnpm@latest --activate
RUN pnpm install --frozen-lockfile

# Copy source files (excluding node_modules to avoid conflicts)
COPY apps/ ./apps/
COPY common/ ./common/
COPY packages/ ./packages/
COPY *.json *.js *.ts *.md ./

# Build the API package
RUN pnpm --filter @dealbrief/api-main build

# Runtime stage - minimal
FROM node:20-alpine AS runtime

WORKDIR /app

# Create non-root user
RUN addgroup -g 1001 -S api && \
    adduser -S -u 1001 -G api api

# Copy only production dependencies and built code
COPY --from=builder --chown=api:api /app/node_modules ./node_modules
COPY --from=builder --chown=api:api /app/apps/api-main/node_modules ./apps/api-main/node_modules
COPY --from=builder --chown=api:api /app/apps/api-main/dist ./apps/api-main/dist

USER api

ENV NODE_ENV=production \
    PORT=3000

EXPOSE 3000

HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node -e "require('http').get('http://localhost:3000/health', (r) => r.statusCode === 200 ? process.exit(0) : process.exit(1))"

CMD ["node", "apps/api-main/dist/server.js"]